# Generated by Django 3.2.12 on 2022-03-18 19:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0054_delete_deprecated_tasks"),
    ]

    operations = [
        migrations.CreateModel(
            name="SyntheticDataRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cloud_type",
                    models.CharField(
                        choices=[("aws", "AWS"), ("azure", "Azure")], max_length=32
                    ),
                ),
                ("since_days_ago", models.PositiveIntegerField(default=7)),
                ("account_count", models.PositiveIntegerField(default=1)),
                ("image_count", models.PositiveIntegerField(default=10)),
                (
                    "image_ocp_chance",
                    models.FloatField(
                        default=0.5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "image_rhel_chance",
                    models.FloatField(
                        default=0.5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "image_other_owner_chance",
                    models.FloatField(
                        default=0.5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("instance_count", models.PositiveIntegerField(default=100)),
                (
                    "run_count_per_instance_mean",
                    models.FloatField(
                        default=1.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "hours_per_run_min",
                    models.FloatField(
                        default=1.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "hours_per_run_mean",
                    models.FloatField(
                        default=2.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "hours_between_runs_mean",
                    models.FloatField(
                        default=8.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("expires_at", models.DateTimeField()),
                ("machine_images", models.ManyToManyField(to="api.MachineImage")),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
    ]
