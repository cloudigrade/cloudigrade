---
# tasks file for aws-cloudigrade-cloudtrail
- block:
  - name: create / sqs cloudtrail queue
    sqs_queue:
      name: "{{ sqs_trail_name }}"
      state: present
    register: sqs_trail_queue

  - name: create / sqs inspection result queue
    sqs_queue:
      name: "{{ sqs_inspection_name }}"
      state: present
    register: sqs_inspection_queue

  - name: create / s3 cloudtrail bucket with policy
    s3_bucket:
      name: "{{ s3_trail_bucket_name }}"
      policy: "{{ lookup( 'template', 's3_trail_bucket_policy.json.j2') | to_json }}"
      state: present
    register: s3_trail_bucket

  - name: create / s3 inspection result bucket
    s3_bucket:
      name: "{{ s3_inspection_bucket_name }}"
      state: present
    register: s3_inspection_bucket

  - name: update / sqs cloudtrail queue with policy
    sqs_queue:
      name: "{{ sqs_trail_name }}"
      policy: "{{ lookup( 'template', 'sqs_trail_policy.json.j2') | to_json }}"
      state: present

  - name: update / sqs inspection queue with policy
    sqs_queue:
      name: "{{ sqs_inspection_name }}"
      policy: "{{ lookup( 'template', 'sqs_inspection_policy.json.j2') | to_json }}"
      state: present

  - name: create / sqs cloudtrail notification for s3 cloudtrail bucket
    script: "create-notification.py --bucket {{ s3_trail_bucket_name }} --queue {{ sqs_trail_queue.queue_arn }}"
    args:
      executable: python3

  - name: create / sqs cloudtrail notification for s3 inspect result bucket
    script: "create-notification.py --bucket {{ s3_inspection_bucket_name }} --queue {{ sqs_inspection_queue.queue_arn }}"
    args:
      executable: python3

  when: aws_state == "present"


- block:
  - name: destroy / s3 trail bucket
    s3_bucket:
      name: "{{ s3_trail_bucket_name }}"
      force: yes
      state: absent
  - name: destroy / s3 inspection bucket
    s3_bucket:
      name: "{{ s3_inspection_bucket_name }}"
      force: yes
      state: absent

  - name: destroy / sqs cloudtrail queue
    sqs_queue:
      name: "{{ sqs_trail_name }}"
      state: absent
  - name: destroy / sqs inspection queue
    sqs_queue:
      name: "{{ sqs_inspection_name }}"
      state: absent

  when: aws_state == "absent"
