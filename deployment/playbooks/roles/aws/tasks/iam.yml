- block:
  - name: create / get aws info
    amazon.aws.aws_caller_info:
    register: aws_caller_info

  - name: create / user
    community.aws.iam:
      iam_type: user
      name: "{{ iam_user_name }}"
      state: present
    register: initial_iam_user

  - name: update / user - key rotation - destroy
    community.aws.iam:
      iam_type: user
      name: "{{ iam_user_name }}"
      access_key_ids: "{{ item.access_key_id }}"
      access_key_state: remove
      state: update
    with_items: "{{ initial_iam_user.user_meta.access_keys }}"
    when: initial_iam_user.user_meta.access_keys | d(False)

  - name: create / user api key
    community.aws.iam:
      iam_type: user
      name: "{{ iam_user_name }}"
      access_key_state: create
      key_count: 1
      state: update
    register: iam_user

  - name: create / user s3 polocy
    community.aws.iam_policy:
      iam_type: user
      iam_name: "{{ iam_user_name }}"
      policy_name: "{{ iam_policy_name }}"
      policy_json: "{{ lookup( 'template', 'cloudigrade-deployment-policy.json.j2') | to_json }}"
      state: present

  - name: create / write deploy env vars
    template:
      src: env.j2
      dest: /mnt/secret_store/.env

  when:
    - aws_state == "present"


- block:
  - name: destroy / user
    iam:
      iam_type: user
      name: "{{ iam_user_name }}"
      state: absent

  when:
    - aws_state == "absent"

