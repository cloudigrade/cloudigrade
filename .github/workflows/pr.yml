name: PR

env:
  IMAGE_NAME: quay.io/cloudservices/cloudigrade
  NGINX_IMAGE_NAME: quay.io/cloudservices/cloudinginx

on: [pull_request]

jobs:
  test-py38:
    name: py38
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cloudigrade/build-container:latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install tox codecov poetry
      - run: tox -e py38
      - run: codecov

  test-flake8:
    name: flake8
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cloudigrade/build-container:latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install tox codecov poetry
      - run: tox -e flake8

  test-vulnerability:
    name: Vulnerability
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cloudigrade/build-container:latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install poetry safety
      - run: poetry install
      - run: safety check

  test-docker:
    name: Docker Build
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    steps:
      - uses: actions/checkout@v2
      - run: docker pull $IMAGE_NAME:latest || true
      - run: docker build --cache-from $IMAGE_NAME:latest .

  test-s2i:
    name: s2i Build
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    env:
      CONTEXT_DIR: deployment/nginx/
      NGINX_S2I_IMAGE: registry.redhat.io/rhel8/nginx-116:latest
      S2I_VERSION: v1.3.1
      S2I_RELEASE: source-to-image-v1.3.1-a5a77147-linux-amd64
    steps:
      - uses: actions/checkout@v2
      - run: apk --no-cache add git
      - run: mkdir -p /opt && cd /opt
      - run: wget https://github.com/openshift/source-to-image/releases/download/${S2I_VERSION}/${S2I_RELEASE}.tar.gz -O /opt/s2i.tar.gz
      - run: tar --strip-components=1 -xzvf /opt/s2i.tar.gz -C /opt/
      - run: mv /opt/s2i /usr/bin/
      - env:
          REDHAT_REGISTRY_LOGIN: ${{ secrets.REDHAT_REGISTRY_LOGIN }}
        run: ${REDHAT_REGISTRY_LOGIN}
      - run: s2i build --context-dir=${CONTEXT_DIR} --ref ${GITHUB_HEAD_REF} ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} ${NGINX_S2I_IMAGE} ${NGINX_IMAGE_NAME}:latest

  test-docs:
    name: Verify docs and openapi.json
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cloudigrade/build-container:latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install poetry
      - run: poetry install
      - run: poetry run make docs-api-examples-test
      - run: poetry run make openapi-test
        env:
          AWS_SQS_ACCESS_KEY_ID: "foo"
          AWS_SQS_SECRET_ACCESS_KEY: "bar"
      - run: poetry run openapi-spec-validator openapi.json
      - run: poetry run openapi-spec-validator openapi-internal.json
